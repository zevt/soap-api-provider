<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.orangeleap.com/orangeleap/services3.2/"
	xmlns:tns="http://www.orangeleap.com/orangeleap/services3.2/"
	xmlns:types="http://www.orangeleap.com/orangeleap/typesv3_2" xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
	jxb:version="2.0" elementFormDefault="qualified" attributeFormDefault="qualified">

	<xs:import namespace="http://www.orangeleap.com/orangeleap/typesv3_2"
		schemaLocation="typesv3.2.xsd" />

	<xs:element name="GetConstituentByListIdRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="xs:long" minOccurs="1"
					maxOccurs="100" />
				<xs:element name="filters" type="tns:filter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="dateFilters" type="tns:dateFilter" minOccurs="0" maxOccurs="unbounded" />				
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentByListIdResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituent" type="types:constituent"
					minOccurs="1" maxOccurs="100" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentByIdRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="xs:long" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentByIdResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituent" type="types:constituent" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="CreateDefaultConstituentRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="dummy" type="xs:string" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="CreateDefaultConstituentResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituent" type="types:constituent"
					minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="FindConstituentsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="firstName" type="xs:string" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="lastName" type="xs:string" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="constituentType" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="organizationName" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="primaryAddress" type="types:address"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="primaryPhone" type="types:phone"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="primaryEmail" type="types:email"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="filters" type="tns:filter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="dateFilters" type="tns:dateFilter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />					
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="FindConstituentsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituent" type="types:constituent"
					minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SearchConstituentsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="firstName" type="xs:string" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="lastName" type="xs:string" minOccurs="0"
					maxOccurs="1" />
				<xs:element name="constituentType" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="organizationName" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="primaryAddress" type="types:address"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="primaryPhone" type="types:phone"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="primaryEmail" type="types:email"
					minOccurs="0" maxOccurs="1" />
				<xs:element name="filters" type="tns:filter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="dateFilters" type="tns:dateFilter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SearchConstituentsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituent" type="types:constituent"
					minOccurs="1" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdateGiftRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" />
				<xs:element name="gift" type="types:gift" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdateGiftResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="gift" type="types:gift" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdateConstituentRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituent" type="types:constituent"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdateConstituentResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituent" type="types:constituent"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdatePledgeRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" />
				<xs:element name="pledge" type="types:pledge" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdatePledgeResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="pledge" type="types:pledge" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdateRecurringGiftRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" />
				<xs:element name="recurringgift" type="types:recurringGift"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdateRecurringGiftResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="recurringgift" type="types:recurringGift"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentPledgeCountRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" />
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentPledgeCountResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="count" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentPledgeRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" minOccurs="0" maxOccurs="1"/>
				<xs:element name="pledgeId" type="xs:long" minOccurs="0" maxOccurs="1" />
				<xs:element name="offset" type="xs:int" />
				<xs:element name="limit">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="0"/>
      						<xs:maxInclusive value="100"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="filters" type="tns:filter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="dateFilters" type="tns:dateFilter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />				
			</xs:sequence>
		</xs:complexType>
	</xs:element>




	<xs:element name="GetConstituentPledgeResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="pledge" type="types:pledge" minOccurs="0"
					maxOccurs="100" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentRecurringGiftCountRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" />
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentRecurringGiftCountResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="count" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<xs:element name="GetConstituentRecurringGiftRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" />
				<xs:element name="offset" type="xs:int" />
				<xs:element name="limit">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="0"/>
      						<xs:maxInclusive value="100"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="filters" type="tns:filter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="dateFilters" type="tns:dateFilter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentRecurringGiftResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="recurringgift" type="types:recurringGift"
					minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentGiftCountRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" />
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentGiftCountResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="count" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentGiftRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" minOccurs="0" maxOccurs="1"/>
				<xs:element name="giftId" type="xs:long" minOccurs="0" maxOccurs="1"/>
				<xs:element name="offset" type="xs:int" />
				<xs:element name="limit">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="0"/>
      						<xs:maxInclusive value="100"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="filters" type="tns:filter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="dateFilters" type="tns:dateFilter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentGiftResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="gift" type="types:gift" minOccurs="0"
					maxOccurs="100" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="GetSegmentationByIdRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetSegmentationByIdResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="entityid" type="xs:long" minOccurs="0"
					maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetSegmentationListByTypeCountRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="type" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetSegmentationListByTypeCountResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="count" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<xs:element name="GetSegmentationListByTypeRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="type" type="xs:string" minOccurs="1"
					maxOccurs="1" />
				<xs:element name="offset" type="xs:int" />
				<xs:element name="limit">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="0"/>
      						<xs:maxInclusive value="100"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetSegmentationListByTypeResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="segmentation" type="types:segmentation"
					minOccurs="0" maxOccurs="100" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetSegmentationByNameRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="segmentation" type="xs:string" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetSegmentationByNameResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="entityId" type="xs:long" minOccurs="0"
					maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetSegmentationListCountRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="dummy" type="xs:string" />
			</xs:sequence>
		</xs:complexType>

	</xs:element>

	<xs:element name="GetSegmentationListCountResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="count" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<xs:element name="GetSegmentationListRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="dummy" type="xs:string" />
				<xs:element name="offset" type="xs:int" />
				<xs:element name="limit">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="0"/>
      						<xs:maxInclusive value="100"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>

	</xs:element>

	<xs:element name="GetSegmentationListResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="segmentation" type="types:segmentation"
					minOccurs="0" maxOccurs="100" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<xs:element name="SaveOrUpdateCommunicationHistoryRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="communicationHistory" type="types:communicationHistory"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdateCommunicationHistoryResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="communicationHistory" type="types:communicationHistory"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="BulkAddCommunicationHistory">
		<xs:sequence>
			<xs:element name="constituentId" type="xs:long" />
			<xs:element name="email" type="xs:string" />
		</xs:sequence>
	</xs:complexType>

	<xs:element name="BulkAddCommunicationHistoryRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="bulkAdd" type="tns:BulkAddCommunicationHistory"
					minOccurs="1" maxOccurs="unbounded" />
				<xs:element name="communicationHistory" type="types:communicationHistory"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="BulkAddCommunicationHistoryResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="dummy" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetCommunicationHistoryCountRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetCommunicationHistoryCountResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="count" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<xs:element name="GetCommunicationHistoryRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="offset" type="xs:int" />
				<xs:element name="limit">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="0"/>
      						<xs:maxInclusive value="100"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="filters" type="tns:filter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="dateFilters" type="tns:dateFilter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetCommunicationHistoryResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="communicationHistory" type="types:communicationHistory"
					minOccurs="0" maxOccurs="100" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetPickListsCountRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="dummy" type="xs:string" />
			</xs:sequence>
		</xs:complexType>

	</xs:element>

	<xs:element name="GetPickListsCountResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="count" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetPickListsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="dummy" type="xs:string" />
				<xs:element name="offset" type="xs:int" />
				<xs:element name="limit">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="0"/>
      						<xs:maxInclusive value="100"/>						
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>

	</xs:element>

	<xs:element name="GetPickListsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="picklist" type="types:picklist"
					minOccurs="0" maxOccurs="100" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetPickListByNameRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="name" type="xs:string" />
				<xs:element name="includeInactive" type="xs:boolean" minOccurs="0" />
				<xs:element name="offset" type="xs:int" minOccurs="0" />
				<xs:element name="limit" minOccurs="0">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="0"/>
      						<xs:maxInclusive value="100"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>

	</xs:element>

	<xs:element name="GetPickListByNameResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="picklist" type="types:picklist"
					minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="AddPickListItemByNameRequest">
		<xs:annotation>
			<xs:appinfo xml:lang="en">
				<jxb:class>
					<jxb:javadoc>
						Request to add a picklist item to an existing
						picklist.

						Requires a name and picklist item.
		</jxb:javadoc>
				</jxb:class>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="picklistname" type="xs:string">
					<xs:annotation>
						<xs:appinfo>
							<jxb:property>
								<jxb:javadoc>
									The name of the picklist that you want to add a
									value too.
								</jxb:javadoc>
							</jxb:property>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="picklistitem" type="types:picklistItem">
					<xs:annotation>
						<xs:appinfo>
							<jxb:property>
								<jxb:javadoc>
									The value you are wishing to add to the picklist.
								</jxb:javadoc>
							</jxb:property>
						</xs:appinfo>
					</xs:annotation>
				</xs:element>
			</xs:sequence>

		</xs:complexType>
	</xs:element>

	<xs:element name="AddPickListItemByNameResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="picklist" type="types:picklist"
					minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetPaymentSourcesByConstituentIdRequest">

		<xs:annotation>
			<xs:appinfo xml:lang="en">
				<jxb:class>
					<jxb:javadoc>
						Retrieve the list of existing payment sources for a
						given constituent id.

						Requires a valid constituentid.

						Returns the
						list of existing payment sources.

						The recommendation by the orange
						leap team is that before you try and
						add a payment source to a
						gift, you
						first do a lookup of existing payment sources to
						determine it does not
						currently exist. If it does currently
						exist
						you would use this payment source instead of creating a new one.

						If you try and create a new payment source that already exists you
						will receive a SoapFault.
		  </jxb:javadoc>
				</jxb:class>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="offset" type="xs:int" use="required" />
			<xs:attribute name="limit">
				<xs:simpleType>
					<xs:restriction base="xs:int">
						<xs:minInclusive value="0"/>
      					<xs:maxInclusive value="100"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="constituentId" use="required" type="xs:long" />
			<xs:attribute name="includeDeletedRecords" type="xs:boolean" />
		</xs:complexType>
	</xs:element>

	<xs:element name="GetPaymentSourcesByConstituentIdResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="paymentsources" type="types:paymentSource"
					minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentByPaymentSourceRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="paymentsource" type="types:paymentSource" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentByPaymentSourceResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituent" type="types:constituent" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ReadCustomTableByIdRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ReadCustomTableByIdResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ListCustomTablesRequest">
		<xs:complexType>
			<xs:sequence>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ListCustomTablesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable"
					minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ReadCustomTableByNameRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="name" type="xs:string" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ReadCustomTableByNameResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable"
					minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ReadCustomTableFieldByIdRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="id" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ReadCustomTableFieldByIdResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableField" type="types:customTableField" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<xs:element name="ListCustomTableFieldsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableFieldId" type="xs:long" />
				<xs:element name="includeValidValues" type="xs:boolean" />
				<xs:element name="filterActive" type="xs:boolean" />
				<xs:element name="row" type="types:customTableRow" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ListCustomTableFieldsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableField" type="types:customTableField"
					minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdateCustomTableRowRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableRow" type="types:customTableRow" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SaveOrUpdateCustomTableRowResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableRow" type="types:customTableRow" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ReadCustomTableRowRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableRowId" type="xs:long"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ReadCustomTableRowResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableRow" type="types:customTableRow" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="filter">
		<xs:sequence>
			<xs:element name="name" type="xs:string" minOccurs="1" />
			<xs:element name="value" type="xs:string" minOccurs="1" />
		</xs:sequence>
	</xs:complexType>


	<xs:complexType name="dateFilter">
		<xs:sequence>
			<xs:element name="name" type="xs:string" minOccurs="1" />
			<xs:element name="minDate" type="xs:date" minOccurs="1" />
			<xs:element name="maxDate" type="xs:date" minOccurs="1" />			
		</xs:sequence>
	</xs:complexType>

	<xs:element name="GetCustomTableRowsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="tablename" type="xs:string" minOccurs="1" />
				<xs:element name="offset" type="xs:long" minOccurs="1" />
				<xs:element name="limit">
					<xs:simpleType>
						<xs:restriction base="xs:long">
						  <xs:minInclusive value="1"/>
					      <xs:maxInclusive value="100"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:element>
				<xs:element name="filters" type="tns:filter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="dateFilters" type="tns:dateFilter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="includeChildCustomTableRows" type="xs:boolean" minOccurs="0" maxOccurs="1" />
				<xs:element name="includeDeletedRecords" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetCustomTableRowsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableRow" type="types:customTableRow"
					minOccurs="0" maxOccurs="99" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetCustomTableRowCountRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableId" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetCustomTableRowCountResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="count" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetCustomTableTitleFieldRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetCustomTableTitleFieldResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetCustomTableConstituentContextFieldRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetCustomTableConstituentContextFieldResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetListMasterCustomTablesRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableName" type="xs:string"
					minOccurs="1" maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetListMasterCustomTablesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable"
					minOccurs="1" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetListDetailCustomTablesRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="excludeEntityRelated" type="xs:boolean"
					minOccurs="0" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetListDetailCustomTablesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable"
					minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<xs:element name="GetListEntityRelatedCustomTablesRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="entityType" type="xs:string" minOccurs="1"
					maxOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetListEntityRelatedCustomTablesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTable" type="types:customTable"
					minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<xs:element name="GetDetailCustomTableRowsRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="masterCustomTableRow" type="types:customTableRow"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="detailCustomTableName" type="xs:string"
					minOccurs="1" maxOccurs="1" />
				<xs:element name="offset" type="xs:long" minOccurs="1" />
				<xs:element name="limit" type="xs:long" minOccurs="1" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetDetailCustomTableRowsResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableRows" type="types:customTableRow"
					minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>


	<xs:complexType name="postalCodeByRadius">
		<xs:sequence>
			<xs:element name="zipCode" type="xs:string" />
			<xs:element name="distance" type="xs:double" />
		</xs:sequence>
	</xs:complexType>

	<xs:element name="GetPostalCodesByRadiusRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="country" type="xs:string" />
				<xs:element name="postalCode" type="xs:string" />
				<xs:element name="radius" type="xs:int" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetPostalCodesByRadiusResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="postalCodesByRadius" type="tns:postalCodeByRadius"
					minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ImportDataRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="type" type="xs:string"/>
				<xs:element name="action" type="xs:string"/>
				<xs:element name="description" type="xs:string"/>
				<xs:element name="csvData" type="xs:string"/>
				<xs:element name="emailsToNotify" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="loginIdsToNotify" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>				
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="ImportDataResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="importId" type="xs:long"/>
				<xs:element name="jobId" type="xs:long"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="ImportRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="jobDescription" type="xs:string" />
				<xs:element name="importEntityType" type="tns:importEntityType" />
				<xs:element name="customTableName" type="xs:string" />
				<xs:element name="csvData" type="xs:string" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ImportResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="jobId" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:simpleType name="importEntityType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="address" />
			<xs:enumeration value="adjustedgift" />
			<xs:enumeration value="constituent" />
			<xs:enumeration value="email" />
			<xs:enumeration value="customtablerow" />
			<xs:enumeration value="gift" />
			<xs:enumeration value="giftinkind" />
			<xs:enumeration value="phone" />
			<xs:enumeration value="constituent" />
			<xs:enumeration value="picklist" />
			<xs:enumeration value="pledge" />
			<xs:enumeration value="recurringgift" />
			<xs:enumeration value="communicationHistory" />
			<xs:enumeration value="multi" />
		</xs:restriction>
	</xs:simpleType>

	<xs:element name="GetJobStatusRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="jobId" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetJobStatusResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="jobStatus" type="xs:string" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetJobResultRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="jobId" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetJobResultResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="jobResult" type="xs:string" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>





	<xs:element name="GetEntityRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableName" type="xs:string" />
				<xs:element name="customTableRowId" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetEntityResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="result" type="types:StringMap" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ListEntitiesRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableName" type="xs:string" />
				<xs:element name="whereFieldEqualsValue" type="types:StringMap" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="ListEntitiesResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="result" type="types:StringMapList" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SetEntityRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableName" type="xs:string" />
				<xs:element name="entity" type="types:StringMap" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="SetEntityResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="customTableRowId" type="xs:long" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentGiftSummaryRequest">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="constituentId" type="xs:long" />
				<xs:element name="statistic" type="xs:string" minOccurs="0" maxOccurs="1" />
				<xs:element name="timePeriod" type="xs:string" minOccurs="0" maxOccurs="1" />
				<xs:element name="filters" type="tns:filter" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="dateFilters" type="tns:dateFilter" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="GetConstituentGiftSummaryResponse">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="giftSummary" type="types:giftSummary"	minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>

